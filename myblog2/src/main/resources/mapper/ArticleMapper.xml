<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.kaishengit.entity.Article">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="node_id" jdbcType="INTEGER" property="nodeId"/>
        <result column="post_time" jdbcType="TIMESTAMP" property="postTime"/>
        <result column="reply_num" jdbcType="INTEGER" property="replyNum"/>
        <result column="scan_num" jdbcType="INTEGER" property="scanNum"/>
        <result column="last_reply_time" jdbcType="TIMESTAMP" property="lastReplyTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.kaishengit.entity.ArticleWithBLOBs">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="simple_content" jdbcType="LONGVARCHAR" property="simpleContent"/>
        <result column="picture" jdbcType="LONGVARCHAR" property="picture"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, title, node_id, post_time, reply_num, scan_num, last_reply_time
    </sql>
    <sql id="Blob_Column_List">
        content, simple_content, picture
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.kaishengit.entity.ArticleExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.kaishengit.entity.ArticleExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_article
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.kaishengit.entity.ArticleExample">
        delete from t_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.kaishengit.entity.ArticleWithBLOBs">
        insert into t_article (id, title, node_id,
        post_time, reply_num, scan_num,
        last_reply_time, content, simple_content,
        picture)
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{nodeId,jdbcType=INTEGER},
        #{postTime,jdbcType=TIMESTAMP}, #{replyNum,jdbcType=INTEGER}, #{scanNum,jdbcType=INTEGER},
        #{lastReplyTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}, #{simpleContent,jdbcType=LONGVARCHAR},
        #{picture,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.kaishengit.entity.ArticleWithBLOBs">
        insert into t_article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="nodeId != null">
                node_id,
            </if>
            <if test="postTime != null">
                post_time,
            </if>
            <if test="replyNum != null">
                reply_num,
            </if>
            <if test="scanNum != null">
                scan_num,
            </if>
            <if test="lastReplyTime != null">
                last_reply_time,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="simpleContent != null">
                simple_content,
            </if>
            <if test="picture != null">
                picture,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="nodeId != null">
                #{nodeId,jdbcType=INTEGER},
            </if>
            <if test="postTime != null">
                #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="replyNum != null">
                #{replyNum,jdbcType=INTEGER},
            </if>
            <if test="scanNum != null">
                #{scanNum,jdbcType=INTEGER},
            </if>
            <if test="lastReplyTime != null">
                #{lastReplyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="simpleContent != null">
                #{simpleContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="picture != null">
                #{picture,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.kaishengit.entity.ArticleExample" resultType="java.lang.Long">
        select count(*) from t_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_article
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.nodeId != null">
                node_id = #{record.nodeId,jdbcType=INTEGER},
            </if>
            <if test="record.postTime != null">
                post_time = #{record.postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.replyNum != null">
                reply_num = #{record.replyNum,jdbcType=INTEGER},
            </if>
            <if test="record.scanNum != null">
                scan_num = #{record.scanNum,jdbcType=INTEGER},
            </if>
            <if test="record.lastReplyTime != null">
                last_reply_time = #{record.lastReplyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.simpleContent != null">
                simple_content = #{record.simpleContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.picture != null">
                picture = #{record.picture,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_article
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        node_id = #{record.nodeId,jdbcType=INTEGER},
        post_time = #{record.postTime,jdbcType=TIMESTAMP},
        reply_num = #{record.replyNum,jdbcType=INTEGER},
        scan_num = #{record.scanNum,jdbcType=INTEGER},
        last_reply_time = #{record.lastReplyTime,jdbcType=TIMESTAMP},
        content = #{record.content,jdbcType=LONGVARCHAR},
        simple_content = #{record.simpleContent,jdbcType=LONGVARCHAR},
        picture = #{record.picture,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_article
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        node_id = #{record.nodeId,jdbcType=INTEGER},
        post_time = #{record.postTime,jdbcType=TIMESTAMP},
        reply_num = #{record.replyNum,jdbcType=INTEGER},
        scan_num = #{record.scanNum,jdbcType=INTEGER},
        last_reply_time = #{record.lastReplyTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.entity.ArticleWithBLOBs">
        update t_article
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="nodeId != null">
                node_id = #{nodeId,jdbcType=INTEGER},
            </if>
            <if test="postTime != null">
                post_time = #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="replyNum != null">
                reply_num = #{replyNum,jdbcType=INTEGER},
            </if>
            <if test="scanNum != null">
                scan_num = #{scanNum,jdbcType=INTEGER},
            </if>
            <if test="lastReplyTime != null">
                last_reply_time = #{lastReplyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="simpleContent != null">
                simple_content = #{simpleContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="picture != null">
                picture = #{picture,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kaishengit.entity.ArticleWithBLOBs">
        update t_article
        set title = #{title,jdbcType=VARCHAR},
        node_id = #{nodeId,jdbcType=INTEGER},
        post_time = #{postTime,jdbcType=TIMESTAMP},
        reply_num = #{replyNum,jdbcType=INTEGER},
        scan_num = #{scanNum,jdbcType=INTEGER},
        last_reply_time = #{lastReplyTime,jdbcType=TIMESTAMP},
        content = #{content,jdbcType=LONGVARCHAR},
        simple_content = #{simpleContent,jdbcType=LONGVARCHAR},
        picture = #{picture,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.kaishengit.entity.Article">
        update t_article
        set title = #{title,jdbcType=VARCHAR},
        node_id = #{nodeId,jdbcType=INTEGER},
        post_time = #{postTime,jdbcType=TIMESTAMP},
        reply_num = #{replyNum,jdbcType=INTEGER},
        scan_num = #{scanNum,jdbcType=INTEGER},
        last_reply_time = #{lastReplyTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>